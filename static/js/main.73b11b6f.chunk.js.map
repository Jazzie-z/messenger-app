{"version":3,"sources":["theme.js","constants/resource.js","components/InputBox.js","components/MessageBox.js","components/ChatBox.js","components/UserCard.js","feed/user.js","components/SideNav.js","App.js","index.js"],"names":["GlobalStyle","createGlobalStyle","theme","colors","primary","primaryWithOpacity","secondary","grey","black","white","staticText","InputContainer","styled","div","InputWrapper","Input","input","Button","InputBox","inputValue","setInputValue","onClick","value","onChange","e","target","placeholder","Container","MessageBox","msg","TitleBar","ChatList","ChatBox","id","useState","chatHistory","setChatHistory","chatListRef","useRef","updateChatHistory","trim","newPayload","push","sender","prevChat","current","scrollTop","scrollHeight","useEffect","keyDownHandler","key","window","addEventListener","removeEventListener","ref","map","index","toString","Card","isActive","css","Avatar","img","UserCard","name","src","alt","USERS","Header","List","SideNav","activeFriend","setActiveFriend","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iUAEO,IAAMA,EAAcC,YAAH,KAMXC,EAAQ,CACjBC,OAAQ,CACJC,QAAS,UACTC,mBAAoB,YACpBC,UAAW,UACXC,KAAM,UACNC,MAAO,QACPC,MAAO,U,uBCfFC,EACC,gBADDA,EAEC,YAFDA,EAGH,OAHGA,EAII,e,61BCDjB,IAAMC,EAAiBC,IAAOC,IAAV,KACE,qBAAGX,MAAkBC,OAAOG,aAKlC,qBAAGJ,MAAkBC,OAAOG,aAKtCQ,EAAeF,IAAOC,IAAV,KAIF,qBAAGX,MAAkBC,OAAOM,SAKtCM,EAAQH,IAAOI,MAAV,KAMLC,EAASL,IAAOC,IAAV,KACD,qBAAGX,MAAkBC,OAAOM,SACvB,qBAAGP,MAAkBC,OAAOC,WAoB7Bc,EAXE,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,WAAYC,EAA6B,EAA7BA,cAAeC,EAAc,EAAdA,QAC3C,OACI,cAACV,EAAD,UACI,eAACG,EAAD,WACI,cAACC,EAAD,CAAOO,MAAOH,EAAYI,SAAU,SAACC,GAAD,OAAOJ,EAAcI,EAAEC,OAAOH,QAAQI,YAAahB,IACvF,cAACO,EAAD,CAAQI,QAASA,EAAjB,SAA2BX,U,sPC3C3C,IAAMiB,EAAYf,IAAOC,IAAV,KAGC,qBAAGX,MAAkBC,OAAOC,WACjC,qBAAGF,MAAkBC,OAAOM,SAexBmB,EARI,SAAC,GAAa,IAAXC,EAAU,EAAVA,IAClB,OACI,cAACF,EAAD,UACKE,K,icCXb,IAAMF,EAAYf,IAAOC,IAAV,KAITiB,EAAWlB,IAAOC,IAAV,KACE,qBAAGX,MAAkBC,OAAOC,WAEjC,qBAAGF,MAAkBC,OAAOM,SAGjCsB,EAAWnB,IAAOC,IAAV,KAuCCmB,EA/BC,SAAC,GAAY,IAAVC,EAAS,EAATA,GAAS,EACYC,mBAAS,IADrB,mBACjBf,EADiB,KACLC,EADK,OAEcc,mBAAS,IAFvB,mBAEjBC,EAFiB,KAEJC,EAFI,KAGlBC,EAAcC,mBACdC,EAAoB,WACtB,GAAIpB,EAAWqB,OAAQ,CACnB,IAAIC,EAAU,YAAON,EAAYF,IAAO,IACxCQ,EAAWC,KAAK,CAAEb,IAAKV,EAAYwB,OAAQ,OAC3CvB,EAAc,IACdgB,GAAe,SAAAQ,GAAQ,kCAAUA,GAAV,kBAAqBX,EAAKQ,OACjDJ,EAAYQ,QAAQC,UAAYT,EAAYQ,QAAQE,eAY5D,OATAC,qBAAU,WACN,IAAMC,EAAiB,SAACzB,GACN,UAAVA,EAAE0B,KAAiBX,KAG3B,OADAY,OAAOC,iBAAiB,UAAWH,GAC5B,WACHE,OAAOE,oBAAoB,UAAWJ,OAI1C,eAAC,EAAD,WACI,cAACnB,EAAD,UAAWpB,IACX,cAACqB,EAAD,CAAUuB,IAAKjB,EAAf,SAA6BF,EAAYF,GAAME,EAAYF,GAAIsB,KAAI,WAAUC,GAAV,IAAG3B,EAAH,EAAGA,IAAH,OAAoB,cAAC,EAAD,CAAmCA,IAAKA,GAAvB2B,EAAMC,eAA4B,OAC1I,cAAC,EAAD,CAAUtC,WAAYA,EAAYC,cAAeA,EAAeC,QAASkB,Q,wdC/CrF,IAAMmB,EAAO9C,IAAOC,IAAV,KAImB,qBAAGX,MAAkBC,OAAOG,aAEvC,qBAAGJ,MAAkBC,OAAOE,sBAE1C,qBAAGsD,UAA2BC,YAAJ,KACZ,qBAAG1D,MAAkBC,OAAOC,cAIxCyD,EAASjD,IAAOkD,IAAV,KAeGC,EATE,SAAC,GAA0C,IAAxC9B,EAAuC,EAAvCA,GAAI+B,EAAmC,EAAnCA,KAAMF,EAA6B,EAA7BA,IAAKzC,EAAwB,EAAxBA,QAASsC,EAAe,EAAfA,SACxC,OACI,eAACD,EAAD,CAAMrC,QAAS,kBAAMA,EAAQY,IAAK0B,SAAUA,EAA5C,UACI,cAACE,EAAD,CAAQI,IAAKH,EAAKI,IAAG,iBAAYF,KAChCA,MCzBAG,EAAQ,CACjB,CAAElC,GAAI,EAAG+B,KAAM,MAAOF,IAAK,kDAC3B,CAAE7B,GAAI,EAAG+B,KAAM,QAASF,IAAK,mDAC7B,CAAE7B,GAAI,EAAG+B,KAAM,UAAWF,IAAK,kDAC/B,CAAE7B,GAAI,EAAG+B,KAAM,UAAWF,IAAK,mD,mUCCnC,IAAMM,EAASxD,IAAOC,IAAV,KAEI,qBAAGX,MAAkBC,OAAOG,aACjC,qBAAGJ,MAAkBC,OAAOI,QAEjC8D,EAAOzD,IAAOC,IAAV,KAIkB,qBAAGX,MAAkBC,OAAOG,aAazCgE,EATC,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,aAAcC,EAAsB,EAAtBA,gBAC7B,OACI,eAACH,EAAD,WACI,cAACD,EAAD,UAAS1D,IACRyD,EAAMZ,KAAI,gBAAGS,EAAH,EAAGA,KAAMF,EAAT,EAASA,IAAK7B,EAAd,EAAcA,GAAd,OAAuB,cAAC,EAAD,CAAmB+B,KAAMA,EAAMF,IAAKA,EAAKzC,QAASmD,EAAiBvC,GAAIA,EAAI0B,SAAUY,IAAiBtC,GAAvFA,U,gIChB7D,IAAMN,EAAYf,IAAOC,IAAV,KAmBA4D,GAdH,WAAO,IAAD,EACwBvC,mBAAS,GADjC,mBACTqC,EADS,KACKC,EADL,KAEhB,OACE,eAAC,IAAD,CAAetE,MAAOA,EAAtB,UACE,cAACF,EAAD,IACA,eAAC,EAAD,WACE,cAAC,EAAD,CAASuE,aAAcA,EAAcC,gBAAiBA,IACtD,cAAC,EAAD,CAASvC,GAAIsC,WCdrBG,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.73b11b6f.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\"\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  body {\r\n    margin: 0;\r\n    font-family: sans-serif;\r\n  }\r\n`\r\nexport const theme = {\r\n    colors: {\r\n        primary: '#4f90ff',\r\n        primaryWithOpacity: '#4f90ff8a',\r\n        secondary: '#e1e1e1',\r\n        grey: '#4e4e4e',\r\n        black: 'black',\r\n        white: 'white'\r\n    }\r\n}","export const staticText = {\r\n    welcome : 'Welcome User!',\r\n    typeHere: 'Type here',\r\n    send: 'Send',\r\n    friendsList :'Friends List',\r\n}","import { staticText } from 'constants/resource'\r\nimport React from 'react'\r\nimport styled from 'styled-components'\r\nconst InputContainer = styled.div`\r\n  border: 1px solid ${({ theme }) => theme.colors.secondary};\r\n  height: 70px;\r\n  width: 100%;\r\n  position: absolute;\r\n  bottom: 0px;\r\n  background: ${({ theme }) => theme.colors.secondary};\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`\r\nconst InputWrapper = styled.div`\r\n  border-radius: 10px;\r\n  display: flex;\r\n  height: 35px;\r\n  background: ${({ theme }) => theme.colors.white};\r\n  width: 90%;\r\n  align-items: center;\r\n  overflow: hidden;\r\n`\r\nconst Input = styled.input`\r\n  width: 90%;\r\n  border: none;\r\n  outline: none;\r\n  padding: 0 10px;  \r\n`\r\nconst Button = styled.div`\r\n  color: ${({ theme }) => theme.colors.white};\r\n  background: ${({ theme }) => theme.colors.primary};\r\n  cursor: pointer;\r\n  height: 100%;\r\n  width: 10%;\r\n  display:flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  user-select: none;\r\n`\r\nconst InputBox = ({ inputValue, setInputValue, onClick }) => {\r\n    return (\r\n        <InputContainer>\r\n            <InputWrapper>\r\n                <Input value={inputValue} onChange={(e) => setInputValue(e.target.value)} placeholder={staticText.typeHere} />\r\n                <Button onClick={onClick}>{staticText.send}</Button>\r\n            </InputWrapper>\r\n        </InputContainer>\r\n    )\r\n}\r\n\r\nexport default InputBox\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nconst Container = styled.div`\r\n  padding: 10px 20px;\r\n  border-radius: 20px;\r\n  background: ${({ theme }) => theme.colors.primary};\r\n  color: ${({ theme }) => theme.colors.white};\r\n  margin-bottom: 8px;\r\n  width: fit-content;\r\n  &:first-child{\r\n      margin-top:auto;\r\n  }\r\n`\r\nconst MessageBox = ({ msg }) => {\r\n    return (\r\n        <Container>\r\n            {msg}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default MessageBox\r\n","import { staticText } from 'constants/resource'\r\nimport React, { useEffect, useRef, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport InputBox from './InputBox'\r\nimport MessageBox from './MessageBox'\r\nconst Container = styled.div`\r\n  flex:1;\r\n  position:relative;\r\n`\r\nconst TitleBar = styled.div`\r\n  background: ${({ theme }) => theme.colors.primary};\r\n  padding: 10px;\r\n  color: ${({ theme }) => theme.colors.white};;\r\n  text-align: center;\r\n`\r\nconst ChatList = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 85%;\r\n  align-items: flex-end;\r\n  padding: 10px;\r\n  overflow: scroll;\r\n`\r\nconst ChatBox = ({ id }) => {\r\n    const [inputValue, setInputValue] = useState('')\r\n    const [chatHistory, setChatHistory] = useState({});\r\n    const chatListRef = useRef();\r\n    const updateChatHistory = () => {\r\n        if (inputValue.trim()) {\r\n            let newPayload = [...chatHistory[id] || []]\r\n            newPayload.push({ msg: inputValue, sender: 'me' })\r\n            setInputValue('')\r\n            setChatHistory(prevChat => ({ ...prevChat, [id]: newPayload }))\r\n            chatListRef.current.scrollTop = chatListRef.current.scrollHeight;\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        const keyDownHandler = (e) => {\r\n            if (e.key === 'Enter') updateChatHistory()\r\n        }\r\n        window.addEventListener('keydown', keyDownHandler)\r\n        return () => {\r\n            window.removeEventListener('keydown', keyDownHandler)\r\n        }\r\n    })\r\n    return (\r\n        <Container>\r\n            <TitleBar>{staticText.welcome}</TitleBar>\r\n            <ChatList ref={chatListRef}>{chatHistory[id] ? chatHistory[id].map(({ msg }, index) => <MessageBox key={index.toString()} msg={msg} />) : null}</ChatList>\r\n            <InputBox inputValue={inputValue} setInputValue={setInputValue} onClick={updateChatHistory} />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default ChatBox\r\n","import React from 'react'\r\nimport styled, { css } from 'styled-components'\r\nconst Card = styled.div`\r\n  display:flex;\r\n  padding: 10px;\r\n  align-items: center;\r\n  border-bottom: 1px solid ${({ theme }) => theme.colors.secondary};\r\n  &:hover{\r\n    background: ${({ theme }) => theme.colors.primaryWithOpacity};\r\n  }\r\n  ${({ isActive }) => isActive && css`\r\n    background: ${({ theme }) => theme.colors.primary};\r\n    color:white;\r\n  `}\r\n`\r\nconst Avatar = styled.img`\r\n  width: 50px;\r\n  height: 50px;\r\n  border-radius: 50%;\r\n  margin-right: 15px;\r\n`\r\nconst UserCard = ({ id, name, img, onClick, isActive }) => {\r\n    return (\r\n        <Card onClick={() => onClick(id)} isActive={isActive}>\r\n            <Avatar src={img} alt={`avatar-${name}`}/>\r\n            {name}\r\n        </Card>\r\n    )\r\n}\r\n\r\nexport default UserCard\r\n","export const USERS = [\r\n    { id: 1, name: 'Sam', img: 'https://www.w3schools.com/howto/img_avatar.png' },\r\n    { id: 2, name: 'Maria', img: 'https://www.w3schools.com/howto/img_avatar2.png' },\r\n    { id: 3, name: 'Philipa', img: 'https://www.w3schools.com/w3images/avatar6.png' },\r\n    { id: 4, name: 'Michael', img: 'https://www.w3schools.com/w3images/avatar3.png' },\r\n]","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport UserCard from 'components/UserCard'\r\nimport { USERS } from 'feed/user'\r\nimport { staticText } from 'constants/resource'\r\nconst Header = styled.div`\r\n  padding: 10px;\r\n  background: ${({ theme }) => theme.colors.secondary};\r\n  color: ${({ theme }) => theme.colors.grey};\r\n`\r\nconst List = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 20%;\r\n  border-right: 1px solid ${({ theme }) => theme.colors.secondary};\r\n  height: 100%;\r\n  overflow: auto;\r\n`\r\nconst SideNav = ({ activeFriend, setActiveFriend }) => {\r\n    return (\r\n        <List>\r\n            <Header>{staticText.friendsList}</Header>\r\n            {USERS.map(({ name, img, id }) => <UserCard key={id} name={name} img={img} onClick={setActiveFriend} id={id} isActive={activeFriend === id} />)}\r\n        </List>\r\n    )\r\n}\r\n\r\nexport default SideNav\r\n","import { useState } from 'react';\nimport styled, { ThemeProvider } from 'styled-components';\nimport { GlobalStyle, theme } from 'theme';\nimport ChatBox from 'components/ChatBox';\nimport SideNav from 'components/SideNav'\n\nconst Container = styled.div`\n  display: flex;\n  height: 100vh;\n  overflow: hidden;\n`\nconst App = () => {\n  const [activeFriend, setActiveFriend] = useState(1);\n  return (\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <Container>\n        <SideNav activeFriend={activeFriend} setActiveFriend={setActiveFriend} />\n        <ChatBox id={activeFriend} />\n      </Container >\n    </ThemeProvider>\n\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}